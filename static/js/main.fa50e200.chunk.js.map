{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["frasesBD","App","useState","frase","setFrase","autor","setAutor","setRandomInt","frasesArray","setFrasesArray","fetchFrases","url","a","fetch","response","json","parseJSON","quotes","console","log","useEffect","className","id","onClick","randomInt","Math","floor","length","random","quote","author","cambiarFraseAutor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGIA,EAAW,yIAyCAC,MAvCf,WACE,MAA0BC,mBAAS,6FAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,kBAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAqCJ,mBAAS,GAA9C,mBAAqBK,GAArB,WACA,EAAsCL,mBAAS,MAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEMA,EAASC,OAFf,OAEZC,EAFY,OAGlBP,EAAeO,EAAUC,QACzBC,QAAQC,IAAIH,GAJM,2CAAH,sDAkBjB,OAXAI,qBAAU,WACRV,EAAYV,KACX,CAACA,IAUF,qBAAKqB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,oBAAGC,GAAG,OAAN,eAAgBnB,EAAhB,QACA,mBAAGmB,GAAG,QAAN,SAAejB,OAEjB,wBAAQgB,UAAU,SAASE,QAAS,kBAflB,WACxB,IAAIC,EAAYC,KAAKC,MAAMlB,EAAYmB,OAASF,KAAKG,UACrDrB,EAAaiB,GACbpB,EAASI,EAAYgB,GAAWK,OAChCvB,EAASE,EAAYgB,GAAWM,QAWgBC,IAA1C,+BCzBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.fa50e200.chunk.js","sourcesContent":["import './App.scss';\nimport React, { useState, useEffect } from 'react'\n\nlet frasesBD = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [frase, setFrase] = useState('The greatest glory in living lies not in never falling, but in rising every time we fall.')\n  const [autor, setAutor] = useState('Nelson Mandela')\n  const [randomNumber, setRandomInt] = useState(0)\n  const [frasesArray, setFrasesArray] = useState(null)\n\n  const fetchFrases = async (url) => {\n    const response = await fetch(url)\n    const parseJSON = await response.json()\n    setFrasesArray(parseJSON.quotes)\n    console.log(parseJSON)\n  }\n\n  useEffect(() => {\n    fetchFrases(frasesBD)\n  }, [frasesBD])\n\n  const cambiarFraseAutor = () => {\n    let randomInt = Math.floor(frasesArray.length * Math.random())\n    setRandomInt(randomInt)\n    setFrase(frasesArray[randomInt].quote)\n    setAutor(frasesArray[randomInt].author)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container-boxfrase\">\n          <div className=\"container-textfrase\">\n            <p id=\"text\"> \"{frase}\" </p>\n            <p id=\"autor\">{autor}</p>\n          </div>\n          <button className=\"button\" onClick={() => cambiarFraseAutor()}>Siguiente</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}